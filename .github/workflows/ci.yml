name: CI

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: |
            .yarn/cache
            .pnp.js
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: TypeScript Cache
        uses: actions/cache@v2
        with:
          path: .yarn/.cache/tsconfig.tsbuildinfo
          key: typescript-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            typescript-${{ github.ref }}-
            typescript-
      - run: yarn install --immutable
      - name: Lint
        run: yarn lint
      - name: Type Check
        run: yarn type-check
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/cache@v2
        with:
          path: |
            .yarn/cache
            .pnp.js
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Webpack Cache
        uses: actions/cache@v2
        with:
          path: .yarn/.cache/webpack
          key: webpack-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            webpack-${{ github.ref }}-
            webpack-
      - run: yarn install --immutable
      - name: Build(Dev)
        if: github.event_name == 'pull_request'
        run: yarn build:ci
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          OAUTH_TOKEN_URL: ${{ secrets.OAUTH_TOKEN_URL }}
          OAUTH_AUTHORIZE_URL: ${{ secrets.OAUTH_AUTHORIZE_URL_DEV }}
          API_ROOT: ${{ secrets.API_ROOT }}
          WS_ROOT: ${{ secrets.WS_ROOT }}
          SEA_URL: ${{ secrets.SEA_URL }}
      - name: Build(Prod)
        if: github.event_name == 'push'
        run: yarn build:ci
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          OAUTH_TOKEN_URL: ${{ secrets.OAUTH_TOKEN_URL }}
          OAUTH_AUTHORIZE_URL: ${{ secrets.OAUTH_AUTHORIZE_URL }}
          API_ROOT: ${{ secrets.API_ROOT }}
          WS_ROOT: ${{ secrets.WS_ROOT }}
          SEA_URL: ${{ secrets.SEA_URL }}
      - run: cp vercel.json dist
      - name: Deploy(Preview)
        if: github.event_name == 'pull_request'
        uses: amondnet/vercel-action@v19
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: dist
          alias-domains: |
            amamo-pr-{{PR_NUMBER}}.tosuke.vercel.app
      - name: Deploy(Production)
        if: github.event_name == 'push'
        uses: amondnet/vercel-action@v19
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: dist
          vercel-args: '--prod'
